# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: flashpointart
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: potion
service: potion

provider:
    name: aws
    # The AWS region in which to deploy (us-east-1 is the default)
    region: us-east-1
    # Environment variables
    environment:
        APP_ENV: ${sls:stage}
        APP_KEY: ${env:APP_KEY, ''}
        APP_NAME: ${env:APP_NAME, ''}
        APP_URL: ${env:APP_URL, 'localhost'}
        AWS_BUCKET: ${construct:uploaded-assets.bucketName}
        DB_DATABASE: ${env:DB_DATABASE, ''}
        DB_HOST: ${env:DB_HOST, ''}
        DB_PASSWORD: ${env:DB_PASSWORD, ''}
        DB_USERNAME: ${env:DB_USERNAME, ''}
        DEFAULT_EVENT_ID: ${env:DEFAULT_EVENT_ID, ''}
        JWT_PRIVATE_KEY: ${env:JWT_PRIVATE_KEY, ''}
        JWT_PUBLIC_KEY: ${env:JWT_PUBLIC_KEY, ''}
        JWT_SECRET: ${env:JWT_SECRET, ''}
        LOG_CHANNEL: ${env:LOG_CHANNEL, 'lambda-stack'}
        MAIL_FROM_ADDRESS: ${env:MAIL_FROM_ADDRESS, ''}
        MAIL_FROM_NAME: ${env:MAIL_FROM_NAME, ''}
        MAIL_MAILER: ${env:MAIL_MAILER, 'log'}
        MAIL_TICKETS_ADDRESS: ${env:MAIL_TICKETS_ADDRESS, ''}
        MAIL_TICKETS_NAME: ${env:MAIL_TICKETS_NAME, ''}
        ORG_NAME: ${env:ORG_NAME, ''}
        SALES_TAX_RATE: ${env:SALES_TAX_RATE, '0'}
        STRIPE_API_KEY: ${env:STRIPE_API_KEY, ''}
        STRIPE_FEE_FLAT: ${env:STRIPE_FEE_FLAT, '0'}
        STRIPE_FEE_PERCENTAGE: ${env:STRIPE_FEE_PERCENTAGE, '0'}
        STRIPE_PAYMENT_METHOD_CONFIG: ${env:STRIPE_PAYMENT_METHOD_CONFIG, ''}
        STRIPE_SECRET: ${env:STRIPE_SECRET, ''}
        STRIPE_WEBHOOK_SECRET: ${env:STRIPE_WEBHOOK_SECRET, ''}
        BUGSNAG_API_KEY: ${env:BUGSNAG_API_KEY, ''}

package:
    # Files and directories to exclude from deployment
    patterns:
        - '!node_modules/**'
        - '!public/storage'
        - '!resources/assets/**'
        - '!storage/**'
        - '!tests/**'
        - '!.dev-db/**'
        - '!.scribe/**'
        # - 'storage/certs/**'
        # - 'storage/stripeWebhookIPs.json'

constructs:
    website:
        domain: ${env:BASE_DOMAIN, ''}
        certificate: ${env:AWS_CERTIFICATE_ARN, ''}
        type: server-side-website
        assets:
            '/build/*': public/build
            # '/vendor/*': public/vendor
            '/favicon.ico': public/favicon.ico
            '/robots.txt': public/robots.txt
            '/images/*': public/images
            '/css/*': public/css
            '/js/*': public/js
    uploaded-assets:
        type: storage

functions:
    # This function runs the Laravel website/API
    web:
        handler: public/index.php
        runtime: php-84-fpm
        timeout: 28 # in seconds (API Gateway has a timeout of 29 seconds)
        events:
            - httpApi: '*'

    # This function lets us run artisan commands in Lambda
    artisan:
        handler: artisan
        runtime: php-84-console
        timeout: 720 # in seconds
        # Uncomment to also run the scheduler every minute
        #events:
        #    - schedule:
        #          rate: rate(1 minute)
        #          input: '"schedule:run"'

plugins:
  - ./vendor/bref/bref
  - serverless-lift
